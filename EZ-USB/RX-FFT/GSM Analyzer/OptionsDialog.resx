<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJCQAAAEACABYCgAAFgAAACgAAAAkAAAASAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAADBAsAHR4iABIQnwAaFqMAExyeABodnwAfHp8AGCKaACYmnQAsKZwAJympAC8trQAtK7UAJC+5ADM0
        sQBCPJYAPDmjAD09tABCSo4AVllXACRWdQBNR54AKEqiAERCtgA7PsgAM02dAFNOlwAkWoIAYmBbAEtE
        xAAqXnkAHlGyAElKvwAnYIEAUk6vADpjcgAxYIEANGN6ACphiQBkZmYAM2iDAGhcnQB5bWIAMGeQAEtq
        gQBDa4EAK2mQAGNbrQAzbI8AWVjLAFxbwQA5cYUANlzOAENqngBnY64AMWe3AHp3cwA9dJIAOXaOAGFh
        zQB4bpoAR3WWAExstAA4d50AM3WoAEl3mgBjeogAGHS2AE95lAAndq4AR3qWAD59kAA0eKUAe31+ADt5
        pQBmZ9MAeHWeAIeAeAAAcNwASICXAGhs0gCQg3gACnrEADl+qgCLfJsAeIONAHJw1QBjhJkAaYWWAE6G
        ngCGgpwAWoWhAImApwCEiYwAAIPXAEaHswCQjYgASoa6ADyMrwAfh8oAeXjeAGCLpwAJiNMAlomiAKSS
        gwA0isQAmZGMAFGQqgBBjb0AfH7eAFqRsQBgka8AqJaGAFWQtwCjk5YAGJDSAI+XmAAyk8cArJmKAE6T
        wwBql64AEpPcAHWXrQBZmbEAVJm1AAOU4gCpnJEAJ5bSAKmZnABJnLUAqpiiAICaqgAKk+oAOZXWALGe
        jwBIk9kAQJbTACCZ1ABGl84ArJ2ZALKhigAYmd0AJZfhAE6azACHnq0Al6ChAGCdvwCMoKYAcp67ALah
        mgA3mt0AtqWOAFeexgAAm+8AYaK3ALeklACxpJgAPKHKALKhpQBKosYAoaSiAKiloABVn9EAAJ75ALum
        nwA6pNUAsKigAEqi3QA9pNsAVqbNAACj9QC+q5sAhKm2AL6tlQCAo8wAJaXlALirnwA3pt4Aq6uoALqu
        mwBTptoAXqrJAMCtngAAqPEAcqTZAFeuwQDCr6AAwrGaAL2vowBOrtEAM67hAEOw2wBSrt0AXbLMAF6v
        1gDHtKQAN6/pAGWx0wC3tK8AcrLPAE2y3ACKrdkAALD/AFqy2gAAsv0Ahq/bAKOxzABWtN4ATbLqAFy2
        2AC1trwAb7bUAE615wAEvPsAXbzeAAm7/wBSveIAk7vXAAC//wBqveIAZrzsACq/9wBhw+QA4Me0AADJ
        /QBexewAV8bsACbI+wBrx+cAGcn9AKnD4wDNysUAVMj3AGjL6QB2yu0AYND1AM7P2AAy1P8APdb8AEja
        +QB02PcAWNz8AG/d8QDT2uMAaeD8AIDe/AD748cA49/hAHzj+wCk5PQAheX9AOTl6wB76/8A7PD1APn3
        8gAAAAAA9t/DtsPDtsOrq62rq8Otw8PDu6vDu6vDq6vDw8Orq7urw9/237bDw7uru7a2w8PDw6vDq7vD
        q8Orq8O7w8OrtqvDw6vDq7bfw7atWD89nKu7w6uru6u7q8Orq7urw7urq7urtrurjJtRKsPDtrtfbKJx
        RIyGjKurq6urq6urq6urm62rq6url3BwaFEBAKu7w7uUd7S0P1VoaHZwdnB2cIxwcIxojHZwcHZwaGho
        XcnJrrvDq7bGSI+Kd0SrjIyMjHZodnaGhnZ2cGhwjIaGhq1CuMnmzsO2tsO7kV93ii1Rw7arq6uMjIyM
        jIyMjJuru6u7w2CE7cnmxqu2tra2tpNIUywcq7u2tqu7q4abq5erq6vDq8Orl47X3d3Bw8O7w7vDw7t0
        87wnOKu2u7vDtra7q6uru6u2trbDoqru642sw6u2tra7u7Zy+/1dJ1Gttrq6trvDw7bDtsO7tsNVquX4
        iXWrq8O7w7utHiYbOf33SRMkJiYwJiEkISYwMDAmJBRS2vHUeS4jw8O2q7a2K4e0p9n+5zgnaZaIioeF
        hdDU3NCKU1LK7vVzaY8kw6u7u8OtMI+f4r3z/sYJFp/ImNG/pdTPksipRaPg+L6OYpIzu6vDtra2P8vR
        4eHH7DYDBoHRwsji4eHRtcFiXtX08I2dtdtGq8O2w7u7P8g64eTePgNtBge5fE/k2+TkM3tmt+/1xInT
        wTlGq8O2q8OrP8It21l70wM7bQQWmjPTWWvqI0CZ5fqof09PtSU5w6u7q8OrW2V4ZWV4ZRIFOzEFNWVl
        ZW9XW33X+NSNRmVlb5RXw6vDw6u7u7vDw7urq60PBlYLBYC7trqcQMzx62yhq63Du7urrcO2ravDq63D
        q6utw8OrCQttBQaturBfquX6c4O7q6vDq7urw8O2w8Otw8Oru8PDq7urhgMLVgUptnqE1fi+eK2rw8O7
        w6vDrau7raurw6u7w8OrrcOrq2cFO0sCTGPM9OhprcPDw7urq7vDq8PDw8PDrcOrq7vDw6u7w6saBjtW
        Bbfu+GORw6urravDw7urw622w62rq8Otw8Oru6vDw6urEAVWIAT4r3qrw7vDw8PDu6urw6vDq8PDw7vD
        q63Dq8Orq8OrlQsXbQsfbq3Dq62rq7urq8PDrcO2w8O7q6u7q8PDu8Ortru2szcNS1AFWra7q8PDw8Ot
        w8O7q8O2q6utw8Orw6utq6vDw7q7b8xOC2QxBYurw7urq7vDq6utw6u7u8PDw7urw7vDw8PDtruRXuDx
        NAtkFwnDw6utw8Oru8PDw6vDq6utq6vDq62rq7a2tptdse7yQxAyZA4Vq8PDq63Dq6utq8O2u8PDw8PD
        u8PDw8O7tmrG/fmfk3ILUG0LPMO7q8PDrcPDw8O2q6u7q6u7q6u7q6u2lRfs/qChq7tUC1ZWBnKrw6ut
        w6urrau7w8PDu8PDu8PDu8PDghgLXKa7w8O7LwxWVgurw7vDw7vDw8PDq6urq6urq6urq6urtqQdZ6ur
        q6urpCILFwmAq6urq6urq7a2tsPDw8PDw8PDw8PDw7u2w8PDw8PDw5UiBg+rw8PDw8PDw8O7w7a2tra2
        tra2tra2tra2tra2tra2traCgqu2tra2tra2trbD37u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7
        u7u7u7vf9t/Durq6urq6urq6urq6urq6urq6urq6urq6urq6urq6w9/2AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>