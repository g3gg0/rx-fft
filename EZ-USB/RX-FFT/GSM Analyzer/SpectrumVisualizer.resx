<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A///4MP//+Dh///h4P//9/D////4//////8=
</value>
  </data>
</root>